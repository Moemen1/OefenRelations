// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OefenRelations;

namespace OefenRelations.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20191216060047_4")]
    partial class _4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OefenRelations.Acteur", b =>
                {
                    b.Property<int>("ActeurId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActeurNaam");

                    b.HasKey("ActeurId");

                    b.ToTable("Acteurs");
                });

            modelBuilder.Entity("OefenRelations.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryNaam");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("OefenRelations.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilmTitel");

                    b.Property<int>("Jaar");

                    b.HasKey("FilmId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("OefenRelations.FilmActeurs", b =>
                {
                    b.Property<int>("ActeurId");

                    b.Property<int>("FilmId");

                    b.HasKey("ActeurId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("FilmActeurs");
                });

            modelBuilder.Entity("OefenRelations.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<string>("StudentNaam");

                    b.HasKey("StudentId");

                    b.HasIndex("CountryId");

                    b.ToTable("Studenten");
                });

            modelBuilder.Entity("OefenRelations.FilmActeurs", b =>
                {
                    b.HasOne("OefenRelations.Acteur", "Acteur")
                        .WithMany("FilmActeurs")
                        .HasForeignKey("ActeurId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OefenRelations.Film", "Film")
                        .WithMany("FilmActeurs")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OefenRelations.Student", b =>
                {
                    b.HasOne("OefenRelations.Country", "Country")
                        .WithMany("Studenten")
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
